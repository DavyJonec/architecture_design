package ru.geekbrains;

public class Homework {
//1. Как организовать клиент-серверное взаимодействие?
//   Клиент смотрит на директорию, которую отсылает на сервер со всеми изменениями. Сервер их хранит.
//   Варианты:
//            1)java.io ServerSocket/Socket
//   Когда приходит файл сервер открывает отдельный поток в котором обрабатывает файл от клиента.
//   Большой минус в том, что клиенты могут держать потоки очень долго и поток не может быть переиспользован
//   пока не вернётся в ThreadPool. Т.е. не может работать несколько клиентов.
//            2)java.nio ServerSocketChannel/SocketChannel
//   В nio отличие в том, что для определённого клиента резервируется канал, в котором они обмениваются информацией.
//   + механизм селекторов, из селектора получают события с котором начинают производить обработку.
//            3)Java фреймворк Netty
//   Работает поверх java.nio, но расширяет его функциональность.
//   Своя структура работы с файлами и возможность сохранять их не в памяти приложения.
//   Имеет множество механизмов для обработки. Обработка запросов происходит объектами классов по цепочке.
//
//2. Как и в каком виде передавать файлы?
//   Все файлы это набор байтов.
//   Загрузить в программу(приложение) - сервер выделяет место, пока не найдётся место для его реализации.
//   Должна сохраняться такая же структура (название папок, файлов, сохранять структуру) на клиенте.
//   Можно частями (обработанные части отправленные раньше, будут удалены и не занимать место)
//
//3. Как пересылать большие файлы?
//   Загрузить в программу(приложение) - сервер выделяет место, пока не найдётся место для его реализации. (можно выпасть по ограничению памяти)
//   Можно частями (обработанные части отправленные раньше, будут удалены и не занимать место)
//
//4. Как пересылать служебные команды?
//   Синхронизация клиент - сервер
//   Сервер должен уметь различать, какая пришла команда.
//   Чтобы на сервере появилась обновлённая версия файла, необходимо удалить предыдущую и сохранить нынешнюю версию.
//
//5. Что хранить в базе данных?
//   Структуру папок, файлы, массив байтов(BLOB)
//
//6. Как передавать структуру каталогов/файлов?
//   Должна сохраняться такая же структура (название папок, файлов, сохранять структуру) на клиенте.
//
//7. Какую библиотеку использовать для сетевого взаимодействия: java.io, java.nio, Netty?
//   Если это вопрос лично для каждого учащегося - хотелось бы Netty рассмотреть
}
